#pragma once
#include <iostream>
#include <vector>

#include "SFML/Graphics.hpp"
#include "SFML/System.hpp"
#include "SFML/Window.hpp"

#include "Functions/Functions.h"
#include "Functions/Button.h"
#include "Functions/Checks.h"

#include "StaticSprites.h"

#include "AllInventory.h"

class Inventory : public AllInventory
{
private:
	std::vector<Checks> ch;

public:
	// Ячейки с предметами
	std::vector<std::vector<CellInInventory>> cells;
	// Ячейки с предметами маленького верстака
	std::vector<std::vector<CellInInventory>> cellsMiniWorkbench;
	// Предмет перетаскиваемый мышкой
	Item mouseItem;
	// Выбранная ячейка (колесиком мыши)
	int choseCell;	


	// Базовый конструктор
	Inventory(){ }
	// Конструктор
	Inventory(std::shared_ptr<sf::RenderWindow> _rw, std::vector<sf::Color> _colorsInventory, std::vector<sf::Texture>& _textures);
	// Отрисовка инвентаря
	void Draw() override;
	// В данном случае не используется
	void Next() override{ }
	// Действия инвентаря
	void Update();
	// Отрисовка и действия внутреннего инвентаря (вместе с мини верстаком, который пока не работает)
	void DrawMiniWorkbench();
	// Отрисовка нижней части инвентаря (во время геймплея)
	void DrawNear(int mouseWheel);
	

};

